name: Build and Push Containers

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'terraform/*'
  push:
    branches:
      - master
    paths-ignore:
      - 'terraform/*'

defaults:
  run:
    shell: bash

jobs:
  build-push-pr:
    name: 'Build & Push Containers'
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/shared-ci
          role-duration-seconds: 3600
          role-session-name: GitHubActions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 311462405659

      - name: Check out code
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/})"
        id: extract_branch

      - name: Build & Push Response
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: opg-incident-response
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile.response -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build & Push Nginx
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: incident-response/nginx
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile.nginx -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
