version: 2.1

workflows:
  pr-build-and-test:
    jobs:
      - build_response:
          name: build_response
      - build_nginx:
          name: build_nginx
orbs:
  response:
    commands:
      install_aws_cli:
          steps:
          - run:
              name: Install AWS CLI
              command: sudo pip3 install awscli --upgrade
      install_aws_local_wrapper:
          steps:
          - run:
              name: Install AWS Local Wrapper
              command: sudo pip3 install awscli-local --upgrade
      ecr_login:
          steps:
          - run:
              name: Login to ECR
              command: |
                  temp_role=$(aws sts assume-role --role-arn arn:aws:iam::311462405659:role/shared-ci --role-session-name ci)
                  export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
                  export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
                  export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
                  eval $(aws ecr get-login --no-include-email --region=eu-west-1)
    executors:
      python:
        docker: [image: circleci/python]
jobs:
  build_response:
    executor: response/python
    parameters:
      container_repo_url:
        type: string
        default: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/opg-incident-response
    steps:
      - checkout
      - response/install_aws_cli
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: false
      - run:
          name: Build
          command: |
            docker build --file Dockerfile.response --tag response:latest .
      - response/ecr_login
      - run:
          name: Push container
          command: |
            export SHORT_HASH=${CIRCLE_SHA1:0:7} >> $BASH_ENV
            docker tag response:latest << parameters.container_repo_url >>:latest
            docker tag response:latest << parameters.container_repo_url >>:$CIRCLE_BRANCH-$SHORT_HASH
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              # We want all of the tags pushed
              docker push << parameters.container_repo_url >>
            else
              docker push << parameters.container_repo_url >>:$CIRCLE_BRANCH-$SHORT_HASH
            fi

  build_nginx:
    executor: response/python
    parameters:
      container_repo_url:
        type: string
        default: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/opg-incident-response
    steps:
      - checkout
      - response/install_aws_cli
      - setup_remote_docker:
          version: 18.06.0-ce
          docker_layer_caching: false
      - run:
          name: Build
          command: |
            docker build -f Dockerfile.nginx -t response-nginx:latest .
      - response/ecr_login
      - run:
          name: Push container
          command: |
            export SHORT_HASH=${CIRCLE_SHA1:0:7} >> $BASH_ENV
            docker tag response-nginx:latest << parameters.container_repo_url >>:nginx-latest
            docker tag response-nginx:latest << parameters.container_repo_url >>:nginx-$CIRCLE_BRANCH-$SHORT_HASH
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              # We want all of the tags pushed
              docker push << parameters.container_repo_url >>
            else
              docker push << parameters.container_repo_url >>:nginx-$CIRCLE_BRANCH-$SHORT_HASH
            fi
